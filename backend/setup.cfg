# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html

[coverage:run]
branch = True
source = .
omit = *migrations*, *tests*, *config*, manage.py, *conftest.py, *settings*, *.txt
data_file = .tests_reports/.coverage
plugins =
    django_coverage_plugin

[coverage:report]
skip_covered = True
show_missing = True
sort = Cover
fail_under = 80

[coverage:xml]
output = .tests_reports/coverage.xml

[coverage:json]
output = .tests_reports/coverage.json

[coverage:html]
directory = .tests_reports/htmlcov

[flake8]
format = wemake
show-source = True
statistics = True
doctests = True
enable-extensions = G

# Flake plugins:
accept-encodings = utf-8
inline-quotes = single
isort-show-traceback = True
multiline-quotes = '''
max_line_length=88

# Excluding some directories:
exclude =
  .svn,
  CVS,
  .bzr,
  .hg,
  .git,
  __pycache__,
  .venv,
  .eggs,
  *.egg,
  apps/*/migrations/*.py,
  manage.py,

ignore =
  # C101: Coding magic comment not found
  C101,
  # D100: Missing docstring in public module
  D100,
  # D101: Missing docstring in public class
  D101,
  # D102: Missing docstring in public method
  D102,
  # D103: Missing docstring in public function
  D103,
  # D104: Missing docstring in public package
  D104,
  # D105: Missing docstring in magic method
  D105,
  # D106:  Missing docstring in public nested class
  D106,
  # D107:  Missing docstring in __init__
  D107,
  # DAR101: Missing parameter(s) in Docstring
  DAR101,
  # DAR201: The docstring is missing a return from definition
  DAR201,
  # DAR301: The docstring is missing a yield present in definition
  DAR301,
  # DAR401: The docstring is missing an exception raised
  DAR401,
  # W503:  line break before binary operator
  W503,
  # WPS300: Found local folder import
  WPS300,
  # WPS305: Found `f` string
  WPS305,
  # WPS306: Found class without a base class
  WPS306,
  # WPS323 Found `%` string formatting
  WPS323,
  # WPS602: Found using `@staticmethod`
  WPS602,

per-file-ignores =
  */settings/*.py:
    # E501: line too long
    E501,
    # F403: unable to detect undefined names
    F403,
    # F405: <name> may be undefined, or defined from star imports: server.settings.<env>
    F405,
    # S104: Possible binding to all interfaces.
    S104,
    # WPS221: Found line with high Jones Complexity: n > 14
    WPS221,
    # WPS226: Found string literal over-use:
    WPS226,
    # WPS347 Found vague import that may cause confusion: *
    WPS347,
    # WPS407 Found mutable module constant
    WPS407,
  config/urls.py:
    # WPS433: Found nested import
    WPS433,
  */test*.py:
    # S101: Use of assert detected
    S101,
    # WPS118: Found too long name
    WPS118,
    # WPS226: Found string literal over-use:
    WPS226,
    # WPS432: Found magic number: <n>
    WPS432,
  conftest.py:
    # WPS437: Found protected attribute usage: <name>
    WPS437,
    # WPS609: Found direct magic attribute usage: <name>
    WPS609,
    # WPS202: Found too many module members: <n>
    WPS202,
    # WPS442: Found outer scope names shadowing: <name>
    WPS442
  apps/*/admin.py:
    # WPS226: Found string literal over-use:
    WPS226,
  apps/*/enums*.py:
  # WPS111 Found too short name
    WPS111,
  # WPS115 Found upper-case constant in a class: UPPER_CASE_CONSTANT
    WPS115,
  # WPS120: Found regular name with trailing underscore
    WPS120,
  # WPS600 Found subclassing a builtin
    WPS600,
  apps/*/factories.py:
    # WPS110: Found wrong variable name: <name>
    WPS110,
    # WPS118: Found too long name: <name>
    WPS118,
    # WPS432: Found magic number:
    WPS432,
  apps/*/models.py:
    # WPS432: Found magic number:
    WPS432,
  apps/*/views.py:
    # WPS215 Too many base classes: n > 3
    WPS215,
    # WPS615: Found unpythonic getter or setter
    WPS615,

[tool:pytest]
# Django options:
DJANGO_SETTINGS_MODULE = config.settings.test
python_files = tests.py test_*.py *_tests.py
# Directories that are not visited by pytest collector:
norecursedirs =
  *.egg
  .eggs
  dist
  build
  docs
  .tox
  .git
  __pycache__
  settings
  .devops
  .github
  .idea
  shared
junit_family = xunit2
junit_suite_name = cleaner bot tests report
junit_logging = system-err

addopts =
  --strict-markers
  --tb=short
  --doctest-modules
  --fail-on-template-vars
  --create-db
  --nomigrations
;  --cov-config=setup.cfg
;  --cov-report=term
;  --cov-report=html
;  --cov-report=xml
  --ds=config.settings.test


[isort]
line_length = 80
indent = 4
# add a trailing comma to the end of from imports
include_trailing_comma = true
# use parantheses to handle single imports longer than `line_length`
use_parentheses = true
multi_line_output = 3
known_django = django, rest_framework
known_third_party = health_check, rest_framework_simplejwt, deepdiff, pytest, barcode, cairosvg, lxml
known_first_party = apps
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY
# add one line between `import abc` and `from abc import ABC`
lines_between_types = 1
# split imports to multline, when 2 or more imports in one line
force_grid_wrap = 2
skip=migrations

[mypy]
python_version = 3.9
check_untyped_defs = True
ignore_missing_imports = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
plugins = mypy_django_plugin.main, mypy_drf_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = config.settings.test

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
ignore_errors = True
